#include <stdio.h>

int gcd(int a, int b)
{
	while (a!=b)
	{
	   if (a>b)
	      a = a-b;
	   else
	      b = b-a;
	}
	return a;
}

int main()
{
	int a[] = {25,100,50,150,35};
	int gcdnr=1;
	int n=5; //nr de procese
        int i;

	//printf("Procesul initial cu pid-ul %d \n", getpid());
	gcdnr=gcd(a[0],a[1]);
	//printf("%d\n", gcdnr);

	for (i=2; i<n; i++){
	   //printf("\nSuntem la iteratia: %d\n",i);
	   int pid = fork();	//cream un proces
	   //printf("PID=%d\n", pid);
	   //printf("GETPID()=%d\n",getpid());

	   if(pid<0){
	      printf("Fork error\n");
	      return 1;
	   }
	   else if (pid==0){	//suntem in procesul fiu
		/*printf("Suntem in fiul cu pidul %d care are parintele cu
pidul %d\n", getpid(), getppid());*/
		gcdnr = gcd(gcdnr, a[i]);
		//printf("%d\n", gcdnr);
	   }
	   else{	//suntem in parinte
		int returnStatus;
		/*printf("Parintele %d asteapta sa termine fiul 
%d\n",getpid(),pid);*/
		waitpid(pid, &returnStatus, 0);
		exit(0);
	   }
	}
	printf("Cel mai mare divizor comun al numerelor este: %d\n",gcdnr);
}
